#configure
#PROJECTNAME=msv-tftpd
#ADDLIB= -lrt
#ADDFLAGS=
#FILES=

ifdef _
ADDLIB+= -lrt
else
ADDLIB+= -lWs2_32
endif

# Link Libraries and Options
LDLIBSOPTIONS= ${ADDLIB}

# Environment
MKDIR=mkdir

ifndef CC
CC=g++ ${RPM_OPT_FLAGS}
endif

ifndef CXX
CXX=g++ ${RPM_OPT_FLAGS} ${ADDFLAGS}
endif

# Object Directory
OBJECTDIR=bDebug/

debug: MSVDFLAGS = -g ${ADDFLAGS}
debug: OBJECTDIR=bDebug/
debug: all

release: MSVDFLAGS = -O2 ${ADDFLAGS}
release: OBJECTDIR=bRelease/
release: all

# Compile Files
COMPILEFILES= ${PROJECTNAME} \
	../../opensource/msvcore2/VString \
	../../opensource/msvcore2/MString
COMPILEFILES += $(strip $(foreach file,$(FILES),$(file)))

# Object Files
OBJECTFILES= \
	${OBJECTDIR}/${PROJECTNAME}.o \
	${OBJECTDIR}/VString.o \
	${OBJECTDIR}/MString.o
OBJECTFILES+= $(addprefix ${OBJECTDIR},$(addsuffix .o, $(notdir $(FILES))))

#compile flags
CFLAGS = -Wall

# all targets
all: ${PROJECTNAME}

# target msvtest: use msvtest.o
${PROJECTNAME}: ${PROJECTNAME}.o
	${LINK.cc} -o ${PROJECTNAME} ${OBJECTFILES} ${LDLIBSOPTIONS}

# target msvtest.o: use cpp
${PROJECTNAME}.o: ${PROJECTNAME}.cpp #${LDLIBSOPTIONS}
	${MKDIR} -p ${OBJECTDIR}
	for x in ${COMPILEFILES}; do $(COMPILE.cc) ${MSVDFLAGS} -o ${OBJECTDIR}/$${x##*/}.o $$x.cpp 2>&1 \
| sed "s/–æ—à–∏–±–∫–∞:/error:"/g | sed "s/Ó¯Ë·Í‡:/error:"/g > ${OBJECTDIR}/out; \
echo -n -e "Compile: \033[92m$${x} \033[0m"; \
echo -n "Errors: [1;31m"; grep 'error:' ${OBJECTDIR}/out; echo -n "[0m"; \
echo -n "[0;31m"; grep '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞' ${OBJECTDIR}/out; echo "[0m"; \
echo -n "Errors: [1;31m" ; grep 'error:' ${OBJECTDIR}/out | wc -l | tr -d "\n" ; \
echo -n "[0m Warnings: " ; grep 'warning:' ${OBJECTDIR}/out | wc -l; \
done

.PHONY: clean

# target clean: delete files
clean:
	rm -f ${PROJECTNAME} ${OBJECTDIR}/out
	for x in ${COMPILEFILES}; do rm ${OBJECTDIR}/$${x##*/}.o; done;
	rmdir ${OBJECTDIR}